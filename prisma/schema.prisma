generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Recipe {
  id          String   @id @default(uuid())
  title       String
  description String?
  ingredients String[]
  steps       String[]
  image       String?  @default("no-recipe-image.jpg")

  createdAt DateTime  @default(now())
  updatedAt DateTime?

  //* Relationship
  User       User?     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     String?
  Category   Category? @relation(fields: [categoryId], references: [id])
  categoryId String?

  favorite Favorite[]
}

enum UserRole {
  ADMIN
  USER
}

model User {
  id              String   @id @default(uuid())
  firstName       String
  lastName        String
  email           String   @unique
  password        String
  avatar          String?  @default("no-user-image.jpg")
  isActive        Boolean  @default(false)
  role            UserRole @default(USER)
  activationToken String?

  createdAt DateTime  @default(now())
  updatedAt DateTime?

  //* Relationship
  recipes  Recipe[]
  favorite Favorite[]
}

model Category {
  id   String @id @default(uuid())
  name String

  //* Relationship
  recipes Recipe[]
}

model Favorite {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())

  //* Relationship
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  recipeId String
  recipe   Recipe @relation(fields: [recipeId], references: [id], onDelete: Cascade)

  @@unique([userId, recipeId]) // Asegura que un usuario no pueda marcar la misma receta m√°s de una vez
}
